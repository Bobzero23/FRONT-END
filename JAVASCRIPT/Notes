+ For the best practice put the script code at the bottome of the body of the html file

** TRUTHY AND FALSY
+ check the code for more information

ARRAYS
+ push -> method to add element to thes to array (it returns the size of an array)
Note: Not like java you can put different data types to this array
+ pop -> removing the last element of the array and returns it.
+ shift
+ unshift
+ concat
+ reverse
+ slice(?start, ?end)
Note: is not necessary to put both 'start' and 'end', and the '?' means optional but if you don't put anything
it will return the copy of that array, it always includes the start but not the end.
+ splice(start, howManyToDelete, 'smthToAdd') -> to put in betwween (original destructive)
+ sort -> converting every element of arrya to its UTF-16 code value and sort accordingly
Note: the sorting method it doesn't work like the other programming languages
Note: It's normal to use 'const' because we dont change the reference we just change the context.
Note: arrays can also arrays inside and also objects

OBJECTS 
+ property = key : value
Note: we gonna need to use the key to get our value back


LOOPS 
+ for...of this is a new to javascript as I am watching 25-May-2023 (you can check the examples)


BLOCK SCOPE
+ if you create a variable using the 'let' keyword in a block, then it will only be reachable inside that block
+ if you create a variable using the 'var' keyword in a block, then it will be reachable everywhere unless that block is function

LEXICAL SCOPE
+ In Js you can have nested functions which can have access to their parents properties

FUNCTION EXPRESSION 
+ creating a function with a variable e.g  const add = funtion() {}

MAP FUNCTION 
+ This one iterates through the whole element and returns whatever the logic you wanna do with them in a different array which you defined

HIGHER ORDER FUNCTIONS
+ These are just functions that accepts other functions as argument and return a function

ARROW FUNCTION 
+ helps us to create a function without using the function keyword but we have to assign it to a variable
+ if you use '()' instead of '{}' arrow function will return itself, you don't have to write the return keyword also it must be one liner


SET TIMEOUT & SET INTERVAL
** setTimeout() -> this function takes two parameters the first one is a function and the second one is  time to wait for that function to be executed
** setInterval() -> this one will keep running the give function in the given interval untll you stop the function itself, and this function gives us an 'id', so store the id of the function to a variable and use that id as the paramter of 'clearInterval(id)' function just like this.

FILTER FUNCTION
+ This one iterates trough the whole elements and returns only the elements that matches the condition 